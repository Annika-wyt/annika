<?xml version="1.0"?>
<launch>
    <!-- Launch file arguments -->
    <arg name="camera_image_topic"      default="/camera/image_raw"/>
    <arg name="camera_info_topic"       default="/camera/camera_info"/>
    <arg name="aruco_dict"              default="DICT_4X4_250"/>
    <arg name="aruco_size"              default="0.1"/>
    <arg name="aruco_tf_name"           default="arucoCamera"/>
    <arg name="map_frame"               default="map_ref"/>
    <arg name="start_localization"      default="false"/>
    <arg name="is_indoors"              default="true"/>
    <arg name="lat"                     default="59.350775"/>
    <arg name="lon"                     default="18.068094"/>
    <arg name="lli_port"                default="/dev/ttyACM0"/>
    <arg name="lli_baud"                default="250000"/>
    <arg name="image_width"             default="640"/>
    <arg name="image_height"            default="480"/>
    <arg name="make_rosbag"             default="false"/>
    
    <!-- Nodes -->
    <group unless="$(arg start_localization)">
        <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
            <param name="port" value="$(arg lli_port)"/>
            <param name="baud" value="$(arg lli_baud)"/>
        </node>
        <include file="$(find svea_sensors)/launch/sensors_launch/controller.launch"></include>
    </group>
    <!-- <include file="$(find svea_sensors)/launch/localize.launch"></include> -->
    
    <node if="$(eval map != '')" pkg="map_server" type="map_server" name="map_server" output="screen" args="/svea_ws/src/svea_thesis/maps/map.yaml">
        <param name="frame_id" value="$(arg map_frame)"/>
    </node>

    <include file="$(find svea_thesis)/launch/aruco_transform.launch"/>
    <!-- check the transform from the svea_sensors/transforms.launch -->

    <include file="$(find svea_thesis)/launch/camera.launch">
        <arg name="image_width"       value="$(arg image_width)"/>
        <arg name="image_height"      value="$(arg image_height)"/>
    </include>
    
    <node name="aruco_detect" pkg="svea_thesis" type="aruco_detect.py" output="screen">
        <param name="sub_image"         value="$(arg camera_image_topic)"/>
        <param name="camera_info"       value="$(arg camera_info_topic)"/>
        <param name="aruco_dict"        value="$(arg aruco_dict)"/>
        <param name="aruco_size"        value="$(arg aruco_size)"/>
        <param name="aruco_tf_name"     value="$(arg aruco_tf_name)"/>
    </node>

    <node name="ref_gps_frame" pkg="svea_thesis" type="ref_gps_frame.py"  output="screen">
        <param name="is_indoors"        value="$(arg is_indoors)"/>
        <rosparam subst_value="true">
        reference_map: [$(arg lat), $(arg lon)]
        </rosparam>
    </node>
    
    <node name="buffer_aruco_msg" pkg="svea_thesis" type="buffer_aruco_msg.py"  output="screen"/>

    <node name="landmark_outdoor" pkg="svea_thesis" type="landmark_outdoor.py" output="screen">
        <param name="map_frame" value="$(arg map_frame)"/>
    </node>
    
     <node if="$(arg make_rosbag)" pkg="rosbag" type="record" name="rosbag_record"
       args="record -o /svea_ws/src/svea_thesis/ricatti_localization
       /aruco/detection
       /aruco/detection/Groundtruth
       /camera/camera_info
       /actuation_twist
       /gps/fix
       /odometry/filtered
       /imu/data"/>   

    <!-- <node name="MocapAruco" pkg="svea_thesis" type="MocapAruco.py" output="screen"/> -->

    <!-- <node name="nats_connector" pkg="nats_ros_connector" type="nats_connector.py" output="screen">
        <remap from="svea5/aruco/detection" to="/aruco/detection"/>
        <rosparam>
        host: sml-wan.asuscomm.com
        publishers:
          - svea5/aruco/detection
        </rosparam>
    </node> -->
    <!-- <node name="aruco_pose" pkg="svea_sensors" type="aruco_pose.py" output="screen"/> -->
    <!-- <node name="p3p_process_data" pkg="svea_sensors" type="p3p_process_data.py" output="screen"/> -->
</launch>